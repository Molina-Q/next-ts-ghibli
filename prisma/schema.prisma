// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
datasource db {
  provider     = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  relationMode = "foreignKeys"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(50)

  castings Casting[]

  createdAt DateTime @default(now())
}

model Genre {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(50)

  genres GenresMovies[]

  createdAt DateTime @default(now())
}

model Person {
  id        Int      @id @default(autoincrement())
  lastName  String   @db.VarChar(50)
  firstName String   @db.VarChar(50)
  sex       String   @db.VarChar(10)
  birthdate DateTime

  directors Director[]
  actors    Actor[]

  createdAt DateTime @default(now())
}

model Director {
  id       Int    @id @default(autoincrement())
  personId Int
  person   Person @relation(fields: [personId], references: [id], onDelete: Cascade)

  movies Movie[]

  createdAt DateTime @default(now())
}

model Actor {
  id       Int    @id @default(autoincrement())
  personId Int
  person   Person @relation(fields: [personId], references: [id], onDelete: Cascade)

  castings Casting[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Movie {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  dateRelease DateTime
  duration    Int      @default(1)
  synopsis    String   @db.Text
  note        Float    @default(0)
  poster      String?  @db.VarChar(255)

  directorId Int?
  director   Director? @relation(fields: [directorId], references: [id], onDelete: Cascade)

  genres GenresMovies[]

  castings Casting[]
}

model Casting {
  id Int @id @default(autoincrement())

  movieId Int
  movie   Movie @relation(fields: [movieId], references: [id], onDelete: Cascade)

  actorId Int
  actor   Actor @relation(fields: [actorId], references: [id], onDelete: Cascade)

  roleId Int
  role   Role @relation(fields: [roleId], references: [id], onDelete: Cascade)
}

model GenresMovies {
  id Int @id @default(autoincrement())

  movieId Int
  movie   Movie @relation(fields: [movieId], references: [id], onDelete: Cascade)

  genreId Int
  genre   Genre @relation(fields: [genreId], references: [id], onDelete: Cascade)
}

// npx prisma generate
// npx prisma db push
